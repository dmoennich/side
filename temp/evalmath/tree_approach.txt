New approach with tree structure:
---------------------------------

Generation of the tree:
- 	go from left to right in the expression
- 	create a node with first operator OP1
- 	add 2 operands ON1.1 and ON1.2
- 	if next operator has priority over previous operator, delete ON1.2 and add OP2 instead with ON1.2
	as left child and ON2.2 as right child; if next operator has no priority,
	create OP2 and make OP1 left child and add ON2.2 as right child
	(priority means: punkt-vor strich or parenthesis)

Evaluation of the tree:
- start at the root
- go down the left side path and do arithmetic if both childs are values
- make result of arithmetic operation the operator node's value and make parent the current node
- if one is an operator, make this one the current node and proceed in the same way